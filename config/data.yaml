---
# this file is written by yaml(yet-another-markup-language), "---" denotes the start of a piece of content
# it describes the specific data serialization of the dataset being tackled
# if you have a public dataset to refer to, please set the path below 
# if without a public dataset, just leave the content after ':' as vacant space? 
# so that when program encounter config['pub_dataset_path'], it returns NULL?
pub_dataset_path: ground_truth
priv_dataset_path: state-15-data
# parameters.json describes all the valid values corresponding to each attribute, no matter it is numerical or categorical 
parameter_spec: ./data/parameters.json
# you can write the identifier attribute's name  below, and in procession we will remove the column for privacy desire
identifier: sim_individual_id
# you can define the binning settings as you want, the three line means [min,max,step] values for bin
numerical_binning:
  "AGE":
    - 20
    - 105
    - 5
  "INCTOT":
    - 0
    - 105_000
    - 5_000
  "INCWAGE":
    - 0
    - 105_000
    - 5_000
  "INCWELFR":
    - 0
    - 105_000
    - 5_000
  "INCINVST":
    - 0
    - 105_000
    - 5_000
  "INCEARN":
    - 0
    - 105_000
    - 5_000
  "POVERTY":
    - 0
    - 520
    - 20
  "HHWT":
    - 0
    - 520
    - 20
  "PERWT":
    - 0
    - 520
    - 20
# we change the settings all in type of [s,t,step]
  # "DEPARTS":
  #   - 0
  #   - 15
  #   - 30
  #   - 45
  # "ARRIVES":
  #   - 0
  #   - 15
  #   - 30
  #   - 45  
  "DEPARTS":
    - 0
    - 45
    - 15
  "ARRIVES":
    - 0
    - 45
    - 15
# you can define settings to group some attributes 
# specifically, define which attributes to group,  the count of combined values,
# the new grouped attribute's name and the valid combinations
grouping_attributes:
  - attributes:
      - "SEX"
      - "MARST"
    num_values: 12
    grouped_name: "SEX+MARST"
    combinations:
      - !!python/tuple [1, 1]
      - !!python/tuple [1, 2]
      - !!python/tuple [1, 3]
      - !!python/tuple [1, 4]
      - !!python/tuple [1, 5]
      - !!python/tuple [1, 6]
      - !!python/tuple [2, 1]
      - !!python/tuple [2, 2]
      - !!python/tuple [2, 3]
      - !!python/tuple [2, 4]
      - !!python/tuple [2, 5]
      - !!python/tuple [2, 6]
  - attributes:
      - "HCOVANY"
      - "HCOVPRIV"
      - "HINSEMP"
      - "HINSCAID"
      - "HINSCARE"
    num_values: 13
    grouped_name: "HINS-COV"
    combinations:
      - !!python/tuple [1, 1, 1, 1, 1]
      - !!python/tuple [2, 1, 1, 1, 1]
      - !!python/tuple [2, 1, 1, 1, 2]
      - !!python/tuple [2, 1, 1, 2, 1]
      - !!python/tuple [2, 1, 1, 2, 2]
      - !!python/tuple [2, 2, 1, 1, 1]
      - !!python/tuple [2, 2, 1, 1, 2]
      - !!python/tuple [2, 2, 1, 2, 1]
      - !!python/tuple [2, 2, 1, 2, 2]
      - !!python/tuple [2, 2, 2, 1, 1]
      - !!python/tuple [2, 2, 2, 1, 2]
      - !!python/tuple [2, 2, 2, 2, 1]
      - !!python/tuple [2, 2, 2, 2, 2]
  - attributes:
      - "EMPSTATD"
      - "WORKEDYR"
      - "WRKLSTWK"
    num_values: 28
    grouped_name: "EMP"
    combinations:
      - !!python/tuple [0, 0, 0]
      - !!python/tuple [10, 3, 2]
      - !!python/tuple [30, 1, 1]
      - !!python/tuple [30, 2, 1]
      - !!python/tuple [30, 1, 3]
      - !!python/tuple [30, 3, 1]
      - !!python/tuple [10, 3, 3]
      - !!python/tuple [20, 3, 1]
      - !!python/tuple [20, 2, 1]
      - !!python/tuple [30, 2, 3]
      - !!python/tuple [30, 3, 3]
      - !!python/tuple [12, 3, 1]
      - !!python/tuple [20, 1, 1]
      - !!python/tuple [12, 3, 2]
      - !!python/tuple [14, 3, 2]
      - !!python/tuple [20, 3, 3]
      - !!python/tuple [30, 3, 2]
      - !!python/tuple [20, 2, 3]
      - !!python/tuple [12, 3, 3]
      - !!python/tuple [20, 1, 3]
      - !!python/tuple [10, 3, 1]
      - !!python/tuple [14, 3, 3]
      - !!python/tuple [30, 1, 2]
      - !!python/tuple [30, 2, 2]
      - !!python/tuple [15, 3, 1]
      - !!python/tuple [14, 3, 1]
      - !!python/tuple [15, 3, 3]
      - !!python/tuple [20, 1, 2]
  - attributes:
      - "ABSENT"
      - "LOOKING"
    num_values: 10
    grouped_name: "ABS+LOOK"
    combinations:
      - !!python/tuple [0, 0]
      - !!python/tuple [1, 1]
      - !!python/tuple [1, 2]
      - !!python/tuple [1, 3]
      - !!python/tuple [3, 1]
      - !!python/tuple [3, 2]
      - !!python/tuple [3, 3]
      - !!python/tuple [4, 1]
      - !!python/tuple [4, 2]
      - !!python/tuple [4, 3]
  - attributes:
      - "AVAILBLE"
      - "WRKRECAL"
    num_values: 12
    grouped_name: "AVA+RECAL"
    combinations:
      - !!python/tuple [0, 0]
      - !!python/tuple [2, 1]
      - !!python/tuple [2, 2]
      - !!python/tuple [2, 3]
      - !!python/tuple [3, 1]
      - !!python/tuple [3, 2]
      - !!python/tuple [3, 3]
      - !!python/tuple [4, 1]
      - !!python/tuple [4, 2]
      - !!python/tuple [4, 3]
      - !!python/tuple [5, 1]
      - !!python/tuple [5, 2]
      - !!python/tuple [5, 3]
# you can detect some attributes whose value can be determined by others to help the efficiency
# in that case, write down the mapping details below
# but if the dataset doesn't include determined_attributes, you should 'mute' those related codes in our package
determined_attributes:
  "EMPSTAT":
    by: "EMPSTATD"
    mapping:
      20: 2
      30: 3
      0: 0
    default: 1
  "LABFORCE":
    by: "EMPSTATD"
    mapping:
      30: 1
      0: 0
    default: 2
